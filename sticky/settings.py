"""
Django settings for sticky project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0tb@d806ik5ebuk3!2g&@f(i(rw^&mn(mpp0$0bleg*-#1-37t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'stickynotes.apps.StickynotesConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'import_export',
    'social_django',
    'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sticky.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sticky.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),

        # 'ENGINE': 'django.db.backends.postgresql',
        # 'NAME': 'stickynotes',
        # 'USER': os.environ["STICKY_USERNAME"],
        # 'PASSWORD': os.environ['STICKY_PASSWORD'],
        # 'HOST': 'localhost',
        # 'PORT': '8000',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
# I added below lines manually
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

LOGIN_REDIRECT_URL = "home"
# LOGOUT_REDIRECT_URL = "home"
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Email settings
"""
    To use gmail smtp settings,
    1. log in to your gmail account on your browser
    2. Go to https://myaccount.google.com/lesssecureapps and allow access for less secure apps
    3. Go to https://accounts.google.com/displayunlockcaptcha and allow access for display unlock captcha
    4. Finally enter you gmail account details below(just replace the EMAIL_HOST_USER and EMAIL_HOST_PASSWORD with your details)
"""
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'example@gmail.com'
EMAIL_HOST_PASSWORD = 'your_email_password'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

"""
    You can quickly check whether your mails are correct by sending a sample email to the  any email you like
    steps:
    1. run python manage.py shell
    2. from django.core.mail import send_mail
    3. send_mail('Subject', 'Message', 'youremail@gmail.com', ['destinationemail@gmail.com'], fail_silently=False)
    4. if sent successfully you should see 1 as you output
"""

# Our custom authentication backend
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'stickynotes.authentication.EmailAuthBackend',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.google.GoogleOAuth2',
]

"""
    But several services like facebook and the likes will not will not allow redirecting users to 127.0.0.1 
    or localhost after successful authentication. Why? they expect a domain name.
    So in order to make social auth. work why your are not ready to have a domain name, you can fix this on both
    windows and linux;
    1. linux: go to /etc/hosts and add the following line to it 
        127.0.0.1 mysite.com
    
    2. Windows: go to C:\windows\System32\Drivers\etc\hosts and add the following line to it
        127.0.0.1 mysite.com
    
    So nexttime instead of running python manage.py runserver, you'll run: python manage.py runserver_plus --cert-file cert.cert
    then navigate to https://mysite.com:8000/
    
    NOTE: you don't need to follow the steps above if you already own a domain name.
"""

# Register for facebook developer acct from https://developers.facebook.com/apps/ and get the details below

SOCIAL_AUTH_FACEBOOK_KEY = '#'  # facebook App ID
SOCIAL_AUTH_FACEBOOK_SECRET = '#'  # facebook App secret

# first create your API KEY from https://console.developers.google.com
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '#'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '#'